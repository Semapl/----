using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace змейка
{
   public class Список_ботов
    {
        Random r = new Random();
        Элемент_списка_ботов первый;
        public Элемент_списка_ботов текущий;

        #region работа с динамикой ботов
        public void Движение()
        {
            if (!проверка_на_пустоту())
            {
                встать_в_начало();
                while (true)
                {
                    int R = r.Next(4);
                    Console.WriteLine("случайное число = " + R);
                    if (R == 0)
                    {
                        текущий.бот.передвинуться(-1, 0);
                    }
                    if (R == 1)
                    {
                        текущий.бот.передвинуться(1, 0);
                    }
                    if (R == 2)
                    {
                        текущий.бот.передвинуться(0, -1);
                    }
                    if(R==3)
                    {
                        текущий.бот.передвинуться(0, 1);
                    }
                    if (текущий.бот.координатаX < 0)
                    {
                        текущий.бот.координатаX = 0;
                    }
                    
                    if (проверка_на_конец_очереди())
                        break;
                    Передвинуться();
                }
            }
           
        }
        #endregion

        #region проверки
        public bool проверка_на_пустоту()
        {
            if (первый == null || текущий == null)
                return true;
            else
                return false;
        }
        public bool проверка_на_конец_очереди()
        {
            if (!проверка_на_пустоту())
                if (текущий.следущий == null)
                    return true;
                else
                    return false;
            else
                return false;
        }

        #endregion
        #region действия_с_очередью
        public void Передвинуться()
        {
            if (!проверка_на_пустоту())
            {
                if (!проверка_на_конец_очереди())
                {
                    if(текущий.следущий!=null)
                    текущий = текущий.следущий;
                }
            }
        }
        private void Поставить_текущий_в_конец()
        {
            if (!проверка_на_пустоту())
            {
                текущий = первый;
                while (true)
                {

                    if (проверка_на_конец_очереди())
                        break;
                    Передвинуться();
                }
            }
        }
        public void встать_в_начало()
        {
            if (!проверка_на_пустоту())
            {
                текущий = первый;
            }
        }
        #endregion
        public void Дабавить_в_список(int i)
        {
            
            if (проверка_на_пустоту())
            {
                текущий = new Элемент_списка_ботов();
                первый = текущий;
                текущий.бот.координатаX = 10;
                текущий.бот.координатаY = 10;
                текущий.следущий = null;
                текущий.бот.id = i;
            }
            else
            {
                Поставить_текущий_в_конец();
                текущий.следущий = new Элемент_списка_ботов();
                Передвинуться();
                текущий.бот.координатаX = 10;
                текущий.бот.координатаY = 10;
                текущий.бот.id = i;
            }
        }
        public void УдалитьТекущий()
        {
            if (!проверка_на_пустоту())
            {
                Элемент_списка_ботов быстрая = первый;
                while (true)
                {
                    if (быстрая.следущий.бот.id == текущий.бот.id)
                    {
                        быстрая.следущий = текущий.следущий;
                        текущий = текущий.следущий;
                        break;
                    }
                    if(быстрая.следущий == null)
                    {
                        break;
                    }
                    быстрая = быстрая.следущий;
                }

            }
            
        }

       
    }
}

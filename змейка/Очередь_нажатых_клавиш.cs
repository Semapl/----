using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace змейка
{
    class Очередь_нажатых_клавиш
    {
        Элемент_очереди_клавиш первый;
        Элемент_очереди_клавиш текущий;

        #region проверки
        public bool проверка_на_пустоту()
        {
            if (первый == null || текущий == null)
                return true;
            else
                return false;
        }
        public bool проверка_на_конец_очереди()
        {
            if (!проверка_на_пустоту())
                if (текущий.следущий == null)
                    return true;
                else
                    return false;
            else
                return false;
        }
        
        #endregion
        #region действия_с_очередью
           private void Передвинуться()
        {
            if (!проверка_на_пустоту())
            {
                if (!проверка_на_конец_очереди())
                {
                    текущий = текущий.следущий;
                }
            }
        }
           private void Поставить_текущий_в_конец()
           {
               if (!проверка_на_пустоту())
               {
                   текущий = первый;
                   while (true)
                   {

                       if (проверка_на_конец_очереди())
                           break;
                       Передвинуться();
                   }
               }
           }
        #endregion
        public void Дабавить_в_очередь(int новый_код)
        {
            Console.WriteLine("Дабавили в очередь"+новый_код);
            if (проверка_на_пустоту())
            {
                текущий = new Элемент_очереди_клавиш();
                первый = текущий;
                текущий.код = новый_код;
                текущий.следущий = null;
            }
            else
            {
                Поставить_текущий_в_конец();
                текущий.следущий = new Элемент_очереди_клавиш();
                Передвинуться();
                текущий.код = новый_код;
            }
        }
      
        
        public int Вернуть_первый_и_удалить()
        {
            if (!проверка_на_пустоту())
            {
                int зап_код = первый.код;
               
                первый = первый.следущий;
                текущий = первый;

                return зап_код;
            }
            else
                return -1;
        } 
        /// <summary>
        /// Возращает -1 если нет нажатых клавиш
        /// </summary>
        /// <returns></returns>
    }
}
